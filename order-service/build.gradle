plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(Test) {
    enabled = false
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
    set('springBootVersion', '3.2.4')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    // mysql
    implementation 'mysql:mysql-connector-java:8.0.33' // 예시 버전
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'
    // Resilience4j 기반 Circuit Breaker
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
    // Micrometer Tracing + Zipkin (Brave 기반)
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    // 기본 추상화 레이어
    implementation 'io.micrometer:micrometer-observation'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
